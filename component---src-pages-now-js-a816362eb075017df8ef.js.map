{"version":3,"sources":["webpack:///./src/components/now/reading/reading.js","webpack:///./src/components/now/activityBase/activityBase.tsx","webpack:///./src/components/now/watching/watching.tsx","webpack:///./src/components/now/listening/listening.tsx","webpack:///./src/components/now/playing/playing.tsx","webpack:///./src/components/now/learning/learning.tsx","webpack:///./src/components/now/working/working.tsx","webpack:///./src/pages/now.js"],"names":["Reading","book","authors","t","useTranslation","key","isbn","className","href","link","target","rel","titleWithoutSeries","map","author","Fragment","id","name","ActivityBase","label","content","Watching","now","watching","Listening","artist","external_urls","spotify","Playing","game","steamId","Learning","learning","Working","working_on","googleAnalyticsId","process","GA_ID","nowQuery","styled","console","error","title","query","render","data","goodreadsBook","allSpotifyTopArtist","edges","node","allSteamGame","SEO","keywords","heroImg","siteCover","fluid","site","buildTime"],"mappings":"wOAmCeA,EA/BC,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACfC,EAAMC,cAAND,EACR,OACE,wBAAIE,IAAKJ,EAAKK,MACZ,gCAASH,EAAE,gBAAX,MACA,uBACEI,UAAS,aAAeN,EAAKK,KAC7BE,KAAMP,EAAKQ,KACXC,OAAO,SACPC,IAAI,uBAEHV,EAAKW,oBACH,IATP,KAUK,IACFV,EAAQW,KAAI,SAACC,GAAD,OACX,kBAAC,IAAMC,SAAP,CAAgBV,IAAKS,EAAOE,IAC1B,uBACET,UAAW,cACXS,GAAE,eAAiBF,EAAOE,GAC1BR,KAAMM,EAAOL,KACbC,OAAO,SACPC,IAAI,uBAEHG,EAAOG,YCZLC,EAR6B,SAAC,GAAqB,IAApBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,QACjD,OACI,wBAAIf,IAAKc,GACL,gCAASA,EAAT,MAA2BC,ICKxBC,EATE,WAEb,IAAQlB,EAAMC,cAAND,EAER,OACI,kBAAC,EAAD,CAAcgB,MAAOhB,EAAE,iBAAkBiB,QAASE,MAAIC,YCe/CC,EAjBuB,SAAC,GAAa,IAAZC,EAAY,EAAZA,OAC5BtB,EAAMC,cAAND,EACR,OACI,wBAAIE,IAAKoB,EAAOR,MACZ,gCAASd,EAAE,kBAAX,MACA,uBACII,UAAW,cACXC,KAAMiB,EAAOC,cAAcC,QAC3BjB,OAAO,SACPC,IAAI,uBAEHc,EAAOR,QCMTW,EAjBoB,SAAC,GAAW,IAAVC,EAAU,EAAVA,KACzB1B,EAAMC,cAAND,EACR,OACI,wBAAIE,IAAKwB,EAAKC,SACV,gCAAS3B,EAAE,gBAAX,MACA,uBACII,UAAW,YACXC,KAAI,sCAAwCqB,EAAKC,QACjDpB,OAAO,SACPC,IAAI,uBAEHkB,EAAKZ,QCPPc,EAPE,WACb,IAAQ5B,EAAMC,cAAND,EACR,OACI,kBAAC,EAAD,CAAcgB,MAAOhB,EAAE,iBAAkBiB,QAASE,MAAIU,YCI/CC,EAPC,WACZ,IAAQ9B,EAAMC,cAAND,EACR,OACI,kBAAC,EAAD,CAAcgB,MAAOhB,EAAE,gBAAiBiB,QAASE,MAAIY,cCQvDC,EAAoBC,GAAYC,MAgGhCC,GApCSC,6BA1DH,WACgB,mBAAtBJ,GACFK,QAAQC,MACN,iGAIJ,IAAQtC,EAAMC,cAAND,EACFuC,EAAQvC,EAAE,YAEhB,OACE,kBAAC,cAAD,CACEwC,MAAOL,EACPM,OAAQ,SAACC,GACP,IAAM5C,EAAO4C,EAAKC,cAAc7C,KAC1BC,EAAUD,EAAKC,QACfuB,EAASoB,EAAKE,oBAAoBC,MAAM,GAAGC,KAC3CpB,EAAOgB,EAAKK,aAAaF,MAAM,GAAGC,KAExC,OACE,oCACE,kBAACE,EAAA,EAAD,CAAKT,MAAOA,EAAOU,SAAUA,aAC7B,kBAAC,IAAD,CAAMC,QAASC,YAAWZ,MAAOA,IACjC,kBAAC,IAAD,KACE,kBAAC,YAAD,CAAWnC,UAAU,eAAegD,OAAK,GACvC,kBAAC,MAAD,KACE,kBAAC,MAAD,KACE,6BACE,4BAAKpD,EAAE,eACP,4BACGA,EAAE,iBADL,IACwB0C,EAAKW,KAAKC,cAKxC,kBAAC,MAAD,KACE,kBAAC,MAAD,KACE,yBAAKlD,UAAU,eACb,4BACE,kBAAC,EAAD,CAASN,KAAMA,EAAMC,QAASA,IAC9B,kBAAC,EAAD,CAAWuB,OAAQA,IACnB,kBAAC,EAAD,MACA,kBAAC,EAAD,CAASI,KAAMA,IACf,kBAAC,EAAD,MACA,kBAAC,EAAD,mBAcxB,0DAAeU,CAAf,oXAoCc","file":"component---src-pages-now-js-a816362eb075017df8ef.js","sourcesContent":["import React from 'react';\nimport '../../i18n';\nimport { useTranslation } from 'react-i18next';\n\nconst Reading = ({ book, authors }) => {\n  const { t } = useTranslation();\n  return (\n    <li key={book.isbn}>\n      <strong>{t('readingLabel')}: </strong>\n      <a\n        className={`book-link-${book.isbn}`}\n        href={book.link}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {book.titleWithoutSeries}\n      </a>{' '}\n      by{' '}\n      {authors.map((author) => (\n        <React.Fragment key={author.id}>\n          <a\n            className={'author-link'}\n            id={`author-link-${author.id}`}\n            href={author.link}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {author.name}\n          </a>\n        </React.Fragment>\n      ))}\n    </li>\n  );\n};\n\nexport default Reading;\n","import React, { FC } from 'react';\n\ninterface ActivityBaseProps {\n    label?: string\n    content?: string\n  }\n\nconst ActivityBase: FC<ActivityBaseProps> = ({label, content}) => {\n    return (\n        <li key={label}>\n            <strong>{label}: </strong>{content}\n        </li>\n    )\n};\n\nexport default ActivityBase;","import React from 'react';\nimport { now } from '../../../../data/siteConfig';\nimport ActivityBase from '../activityBase';\nimport '../../i18n';\nimport { useTranslation } from 'react-i18next';\n\nconst Watching = () => {\n\n    const { t } = useTranslation();\n\n    return (\n        <ActivityBase label={t('watchingLabel')} content={now.watching}/>\n    )\n};\n\nexport default Watching;","import React, { FC } from 'react';\nimport '../../i18n';\nimport { useTranslation } from 'react-i18next';\nimport { Artist } from './artist';\n\ninterface ListeningProps {\n    artist: Artist\n}\n\nconst Listening: FC<ListeningProps> = ({artist}) => {\n    const { t } = useTranslation();\n    return (\n        <li key={artist.name}>\n            <strong>{t(\"listeningLabel\")}: </strong>\n            <a\n                className={'artist-link'}\n                href={artist.external_urls.spotify}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n            >\n                {artist.name}\n            </a>\n        </li>\n    )\n};\n\nexport default Listening;","import React, { FC } from 'react';\nimport '../../i18n';\nimport { useTranslation } from 'react-i18next';\nimport { Game } from './game';\n\ninterface PlayingProps {\n    game: Game\n}\n\nconst Playing : FC<PlayingProps> = ({game}) => {\n    const { t } = useTranslation();\n    return (\n        <li key={game.steamId}>\n            <strong>{t(\"playingLabel\")}: </strong>\n            <a\n                className={'game-link'}\n                href={`https://store.steampowered.com/app/${game.steamId}`}\n                target='_blank'\n                rel='noopener noreferrer'\n            >\n                {game.name}\n            </a>\n        </li>\n    )\n};\n\nexport default Playing;","import React from 'react';\nimport { now } from '../../../../data/siteConfig';\nimport ActivityBase from '../activityBase';\nimport '../../i18n';\nimport { useTranslation } from 'react-i18next';\n\nconst Learning = () => {\n    const { t } = useTranslation();\n    return (\n        <ActivityBase label={t(\"learningLabel\")} content={now.learning}/>\n    )\n};\n\nexport default Learning;","import React from 'react';\nimport { now } from '../../../../data/siteConfig';\nimport ActivityBase from '../activityBase';\nimport '../../i18n';\nimport { useTranslation } from 'react-i18next';\n\nconst Working = () => {\n    const { t } = useTranslation();\n    return (\n        <ActivityBase label={t('workingLabel')} content={now.working_on}/>\n    )\n};\n\nexport default Working;","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport { Container, Row, Col } from 'react-awesome-styled-grid';\nimport { keywords, siteCover } from '../../data/siteConfig';\nimport Hero from '../components/hero';\nimport Wrapper from '../components/wrapper';\nimport SEO from '../components/SEO';\nimport Reading from '../components/now/reading';\nimport Watching from '../components/now/watching';\nimport Listening from '../components/now/listening';\nimport Playing from '../components/now/playing';\nimport Learning from '../components/now/learning';\nimport Working from '../components/now/working';\nimport '../components/i18n';\nimport { useTranslation } from 'react-i18next';\n\nconst googleAnalyticsId = process.env.GA_ID;\n\nconst Now = () => {\n  if (googleAnalyticsId === 'UA-000000000-1') {\n    console.error(\n      'WARNING: Please set a proper googleAnalyticsId. See https://analytics.google.com for details.'\n    );\n  }\n\n  const { t } = useTranslation();\n  const title = t('heroText');\n\n  return (\n    <StaticQuery\n      query={nowQuery}\n      render={(data) => {\n        const book = data.goodreadsBook.book;\n        const authors = book.authors;\n        const artist = data.allSpotifyTopArtist.edges[0].node;\n        const game = data.allSteamGame.edges[0].node;\n\n        return (\n          <>\n            <SEO title={title} keywords={keywords} />\n            <Hero heroImg={siteCover} title={title} />\n            <Wrapper>\n              <Container className=\"page-content\" fluid>\n                <Row>\n                  <Col>\n                    <div>\n                      <h1>{t('nowHeading')}</h1>\n                      <h2>\n                        {t('nowSubheading')} {data.site.buildTime}\n                      </h2>\n                    </div>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    <div className=\"now-content\">\n                      <ul>\n                        <Reading book={book} authors={authors} />\n                        <Listening artist={artist} />\n                        <Watching />\n                        <Playing game={game} />\n                        <Learning />\n                        <Working />\n                      </ul>\n                    </div>\n                  </Col>\n                </Row>\n              </Container>\n            </Wrapper>\n          </>\n        );\n      }}\n    />\n  );\n};\n\nexport default styled(Now)`\n  .page-content {\n    max-width: 100%;\n    margin-bottom: 40px;\n  }\n\n  .author-link :not(:last-of-type) :after {\n    content: ', ';\n  }\n\n  .author-link :nth-last-child(2) :not(:first-child) :after {\n    content: ' and ';\n  }\n\n  ul {\n    list-style-type: none;\n    margin-left: 0;\n  }\n\n  ul li a:link,\n  ul li a:visited {\n    color: black;\n    text-decoration: none;\n  }\n\n  ul li a:hover,\n  ul li a:active {\n    color: black;\n    text-decoration: underline;\n  }\n\n  h2 {\n    margin-bottom: 40px;\n  }\n`;\n\nconst nowQuery = graphql`\n  query NowQuery {\n    site {\n      buildTime(formatString: \"DD/MM/YYYY\")\n    }\n    goodreadsBook(shelfNames: { eq: \"currently-reading\" }) {\n      book {\n        authors {\n          id\n          name\n          link\n        }\n        titleWithoutSeries\n        link\n      }\n    }\n    allSteamGame(sort: { order: DESC, fields: playtime_2weeks }, limit: 1) {\n      edges {\n        node {\n          steamId\n          name\n          playtime_2weeks\n          playtime_forever\n          img_icon_url\n          img_logo_url\n        }\n      }\n    }\n    allSpotifyTopArtist(\n      filter: { time_range: { eq: \"short_term\" } }\n      sort: { fields: order }\n      limit: 1\n    ) {\n      edges {\n        node {\n          name\n          external_urls {\n            spotify\n          }\n          order\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}