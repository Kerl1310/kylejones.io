{"version":3,"sources":["webpack:///./src/templates/tags.js"],"names":["BlogPostListItem","styled","li","BlogPostList","ul","googleAnalyticsId","process","GA_ID","pageContext","data","console","error","tag","edges","allMarkdownRemark","tagHeader","tagPath","t","useTranslation","title","keywords","description","url","pathPrefix","heroImg","siteCover","className","fluid","map","articleLink","key","node","frontmatter","path","id","Date","date","toLocaleDateString","to","target","rel","excerpt"],"mappings":"4FAAA,4IAWMA,EAAmBC,UAAOC,GAAV,6EAAGD,CAAH,oDAMhBE,EAAeF,UAAOG,GAAV,yEAAGH,CAAH,oDAMZI,EAAoBC,GAAYC,MAsEvBN,6BApES,SAAC,GAA2B,IAAzBO,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACZ,mBAAtBJ,GACFK,QAAQC,MACN,iGAIJ,IAAQC,EAAQJ,EAARI,IACAC,EAAUJ,EAAKK,kBAAfD,MACFE,EAAS,sBAAyBH,EAAzB,IACTI,EAAO,QAAWJ,EAChBK,EAAMC,cAAND,EACR,OACE,oCACE,kBAAC,IAAD,CACEE,MAAK,GAAKJ,EACVK,SAAUA,WACVC,YAAW,4CAA8CT,EACzDU,IAAG,GAAKC,aAAaP,IAEvB,kBAAC,IAAD,CAAMQ,QAASC,YAAWN,MAAOF,EAAE,cACnC,kBAAC,IAAD,KACE,kBAAC,YAAD,CAAWS,UAAU,eAAeC,OAAK,GACvC,kBAAC,MAAD,KACE,kBAAC,MAAD,KACE,6BACE,4BAAKZ,MAIX,kBAAC,MAAD,KACE,kBAAC,MAAD,KACE,kBAACZ,EAAD,KACGU,EAAMe,KAAI,SAACC,GAAD,OACT,kBAAC7B,EAAD,CACE0B,UAAU,YACVI,IAAKD,EAAYE,KAAKC,YAAYC,KAClCC,GAAIL,EAAYE,KAAKC,YAAYC,MAEjC,yBAAKP,UAAU,kBACb,4BACG,IAAIS,KACHN,EAAYE,KAAKC,YAAYI,MAC7BC,mBAAmB,WAGzB,kBAAC,OAAD,CACEC,GAAIT,EAAYE,KAAKC,YAAYC,KACjCM,OAAO,UACPC,IAAI,uBAEHX,EAAYE,KAAKC,YAAYb,OAEhC,2BAAIU,EAAYE,KAAKU,gBAM/B,kBAAC,OAAD,CAAMH,GAAG,QAAQC,OAAO,UAAUC,IAAI,uBAAtC,kBASV,2DAAevC,CAAf","file":"component---src-templates-tags-js-3b164f7d41db2a01b34d.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Container, Row, Col } from 'react-awesome-styled-grid';\nimport { siteCover, pathPrefix, keywords } from '../../data/siteConfig';\nimport Hero from '../components/hero';\nimport Wrapper from '../components/wrapper';\nimport SEO from '../components/SEO';\nimport { Link, graphql } from 'gatsby';\nimport '../components/i18n';\nimport { useTranslation } from 'react-i18next';\n\nconst BlogPostListItem = styled.li`\n  list-style-type: none;\n  margin-left: 0;\n  width: 100%;\n`;\n\nconst BlogPostList = styled.ul`\n  list-style-type: none;\n  margin-left: 0;\n  width: 100%;\n`;\n\nconst googleAnalyticsId = process.env.GA_ID;\n\nconst TagPageTemplate = ({ pageContext, data }) => {\n  if (googleAnalyticsId === 'UA-000000000-1') {\n    console.error(\n      'WARNING: Please set a proper googleAnalyticsId. See https://analytics.google.com for details.'\n    );\n  }\n\n  const { tag } = pageContext;\n  const { edges } = data.allMarkdownRemark;\n  const tagHeader = `Posts Tagged With \"${tag}\"`;\n  const tagPath = `tags/${tag}`;\n  const { t } = useTranslation();\n  return (\n    <>\n      <SEO\n        title={`${tagHeader}`}\n        keywords={keywords}\n        description={`Listing page for blog posts with the tag ${tag}`}\n        url={`${pathPrefix}${tagPath}`}\n      />\n      <Hero heroImg={siteCover} title={t('heroText')} />\n      <Wrapper>\n        <Container className=\"page-content\" fluid>\n          <Row>\n            <Col>\n              <div>\n                <h1>{tagHeader}</h1>\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <BlogPostList>\n                {edges.map((articleLink) => (\n                  <BlogPostListItem\n                    className=\"blog-post\"\n                    key={articleLink.node.frontmatter.path}\n                    id={articleLink.node.frontmatter.path}\n                  >\n                    <div className=\"blog-post-date\">\n                      <h4>\n                        {new Date(\n                          articleLink.node.frontmatter.date\n                        ).toLocaleDateString('en-GB')}\n                      </h4>\n                    </div>\n                    <Link\n                      to={articleLink.node.frontmatter.path}\n                      target=\"__blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {articleLink.node.frontmatter.title}\n                    </Link>\n                    <p>{articleLink.node.excerpt}</p>\n                  </BlogPostListItem>\n                ))}\n              </BlogPostList>\n            </Col>\n          </Row>\n          <Link to=\"/tags\" target=\"__blank\" rel=\"noopener noreferrer\">\n            All Tags\n          </Link>\n        </Container>\n      </Wrapper>\n    </>\n  );\n};\n\nexport default styled(TagPageTemplate)`\n  .page-content {\n    display: block;\n    max-width: 100%;\n    margin-bottom: 40px;\n  }\n\n  h4 {\n    margin-bottom: 5px;\n  }\n\n  ul {\n    list-style-type: none;\n    margin-left: 0;\n    width: 100%;\n  }\n\n  ul li:last-child hr {\n    display: none;\n  }\n\n  .blog-post-date {\n    font-size: 12px;\n  }\n`;\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt(pruneLength: 145)\n          frontmatter {\n            title\n            date\n            path\n            isFeatured\n            featuredImage\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}