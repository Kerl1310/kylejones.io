{"version":3,"sources":["webpack:///./src/components/separator/separator.tsx","webpack:///./src/components/blogListing/blogListing.tsx","webpack:///./src/pages/blog.js"],"names":["styled","BlogListing","article","id","node","frontmatter","date","key","className","Date","toLocaleDateString","to","path","target","rel","title","excerpt","googleAnalyticsId","process","GA_ID","Blog","render","console","error","t","this","props","query","blogQuery","data","articles","allMarkdownRemark","edges","SEO","keywords","heroImg","siteCover","fluid","map","Component","blogComponent","withTranslation"],"mappings":"kKASeA,qBANG,WAChB,OACE,gCAIJ,+DAAeA,CAAf,0C,2NCyCeC,EA3B4B,SAAC,GAAc,IAAbC,EAAa,EAAbA,QACzC,OACI,wBACIC,GAAE,aAAeD,EAAQE,KAAKC,YAAYC,KAC1CC,IAAG,aAAeL,EAAQE,KAAKC,YAAYC,KAC3CE,UAAU,aAEV,yBAAKA,UAAU,kBACX,4BACC,IAAIC,KACDP,EAAQE,KAAKC,YAAYC,MAC3BI,mBAAmB,WAGzB,kBAAC,IAAD,CACIC,GAAIT,EAAQE,KAAKC,YAAYO,KAC7BC,OAAO,UACPC,IAAI,uBAEHZ,EAAQE,KAAKC,YAAYU,OAE9B,2BAAIb,EAAQE,KAAKY,SACjB,kBAAC,IAAD,QCjCNC,EAAoBC,GAAYC,MAEhCC,E,kGACJC,OAAA,WAAU,IAAD,OACmB,mBAAtBJ,GACFK,QAAQC,MACN,iGAIJ,IAAQC,EAAMC,KAAKC,MAAXF,EACFT,EAAQS,EAAE,YAEhB,OACE,kBAAC,cAAD,CACEG,MAAOC,EACPP,OAAQ,SAACQ,GACP,IAAMC,EAAWD,EAAKE,kBAAkBC,MAExC,OACE,oCACE,kBAACC,EAAA,EAAD,CAAKlB,MAAOA,EAAOmB,SAAUA,aAC7B,kBAAC,IAAD,CAAMC,QAASC,YAAWrB,MAAOA,IACjC,kBAAC,IAAD,CAASP,UAAW,EAAKkB,MAAMlB,WAC7B,kBAAC,YAAD,CAAWA,UAAU,eAAe6B,OAAK,GACvC,kBAAC,MAAD,KACE,kBAAC,MAAD,KACE,6BACE,4BAAKb,EAAE,iBAIb,kBAAC,MAAD,KACE,kBAAC,MAAD,KACG,IACD,4BACGM,EAASQ,KAAI,SAACpC,GAAD,OACZ,kBAAC,EAAD,CACEA,QAASA,EACTK,IAAG,aAAeL,EAAQE,KAAKC,YAAYC,oB,GArCpDiC,aAqDbC,EAAgBC,cAAkBrB,GA4BlCQ,GA1BS5B,4BAAOwC,GAAtB,2DAAexC,CAAf,+MA0Be","file":"component---src-pages-blog-js-bc608028c7f7abc299e6.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst Separator = () =>{\n  return (\n    <hr />\n  )\n};\n\nexport default styled(Separator)`\nmargin-top: 16px;\nmargin-bottom: 16px;\n`;","import React, { FC } from 'react';\nimport Link from 'gatsby-link';\nimport Separator from '../separator';\n\n// const Separator = styled.hr`\n//   margin-top: 16px;\n//   margin-bottom: 16px;\n//   width: 100%;\n// `;\n\ninterface BlogListingProps {\n    article: {\n        node: {\n            frontmatter: {\n                date: string,\n                path: string,\n                title: string\n            },\n            excerpt: string\n        }\n    }\n}\n\nconst BlogListing : FC<BlogListingProps> = ({article}) => {\n    return (\n        <li\n            id={`blog-post-${article.node.frontmatter.date}`}\n            key={`blog-post-${article.node.frontmatter.date}`}\n            className=\"blog-post\"\n            >\n            <div className=\"blog-post-date\">\n                <h4>\n                {new Date(\n                    article.node.frontmatter.date\n                ).toLocaleDateString('en-GB')}\n                </h4>\n            </div>\n            <Link\n                to={article.node.frontmatter.path}\n                target=\"__blank\"\n                rel=\"noopener noreferrer\"\n            >\n                {article.node.frontmatter.title}\n            </Link>\n            <p>{article.node.excerpt}</p>\n            <Separator />\n            </li>\n    )\n};\n\nexport default BlogListing;","import React, { Component } from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport { Container, Row, Col } from 'react-awesome-styled-grid';\nimport { keywords, siteCover } from '../../data/siteConfig';\nimport Hero from '../components/hero';\nimport Wrapper from '../components/wrapper';\nimport SEO from '../components/SEO';\nimport '../components/i18n';\nimport { withTranslation } from 'react-i18next';\nimport BlogListing from '../components/blogListing/blogListing';\n\nconst googleAnalyticsId = process.env.GA_ID;\n\nclass Blog extends Component {\n  render() {\n    if (googleAnalyticsId === 'UA-000000000-1') {\n      console.error(\n        'WARNING: Please set a proper googleAnalyticsId. See https://analytics.google.com for details.'\n      );\n    }\n\n    const { t } = this.props;\n    const title = t('heroText');\n\n    return (\n      <StaticQuery\n        query={blogQuery}\n        render={(data) => {\n          const articles = data.allMarkdownRemark.edges;\n\n          return (\n            <>\n              <SEO title={title} keywords={keywords} />\n              <Hero heroImg={siteCover} title={title} />\n              <Wrapper className={this.props.className}>\n                <Container className=\"page-content\" fluid>\n                  <Row>\n                    <Col>\n                      <div>\n                        <h1>{t('blogTitle')}</h1>\n                      </div>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col>\n                      {' '}\n                      <ul>\n                        {articles.map((article) => (\n                          <BlogListing\n                            article={article}\n                            key={`blog-post-${article.node.frontmatter.date}`}\n                          />\n                        ))}\n                      </ul>\n                    </Col>\n                  </Row>\n                </Container>\n              </Wrapper>\n            </>\n          );\n        }}\n      />\n    );\n  }\n}\n\nconst blogComponent = withTranslation()(Blog);\n\nexport default styled(blogComponent)`\n  .page-content {\n    display: block;\n    max-width: 100%;\n    margin-bottom: 40px;\n  }\n\n  h4 {\n    margin-bottom: 5px;\n  }\n\n  ul {\n    list-style-type: none;\n    margin-left: 0;\n    width: 100%;\n  }\n\n  ul li:last-child hr {\n    display: none;\n  }\n\n  .blog-post-date {\n    font-size: 12px;\n  }\n`;\n\nconst blogQuery = graphql`\n  query BlogQuery {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: frontmatter___date }\n      limit: 25\n    ) {\n      edges {\n        node {\n          frontmatter {\n            path\n            date\n            title\n          }\n          excerpt(pruneLength: 285)\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}